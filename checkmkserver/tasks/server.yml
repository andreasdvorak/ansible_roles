---
- name: "Check if CheckMK is installed"
  ansible.builtin.command: dpkg-query -l "{{ checkmk_server_package_installed }}"
  register: package_check
  ignore_errors: true
  when: ansible_facts['os_family'] == "Debian"

- name: Download CheckMK package
  ansible.builtin.get_url:
    url: "{{ url }}/{{ checkmk_server_version }}/{{ checkmk_server_package }}"
    dest: /home/ansible
    mode: u+w,g+w
  when: package_check is not succeeded

- name: Check if pkg file exists
  ansible.builtin.stat:
    path: "/home/ansible/{{ checkmk_server_package }}"
  register: package_download

- name: Install CheckMK server package {{ checkmk_server_version }}
  ansible.builtin.apt:
    deb: "/home/ansible/{{ checkmk_server_package }}"
  when:
    - ansible_facts['distribution'] == "Debian"
    - package_download.stat.exists

- name: Remove CheckMK server package file
  ansible.builtin.file:
    path: "/home/ansible/{{ checkmk_server_package }}"
    state: absent

- name: "Create .ssh folder for {{ checkmk_site }}"
  ansible.builtin.file:
    path: "/opt/omd/sites/{{ checkmk_site }}/.ssh"
    state: directory
    owner: mycheck
    group: mycheck
    mode: u+rwx

- name: "Upload SSH private key for {{ checkmk_site }}"
  ansible.builtin.copy:
    src: "{{ checkmk_agent_private_key_source }}"
    dest: "/opt/omd/sites/{{ checkmk_site }}/.ssh/id_rsa"
    owner: mycheck
    group: mycheck
    mode: u+r

- name: Upload SSH public key for mycheck
  ansible.builtin.copy:
    src: "{{ checkmk_agent_public_key_source }}"
    dest: "/opt/omd/sites/{{ checkmk_site }}/.ssh/id_rsa.pub"
    owner: mycheck
    group: mycheck
    mode: u+rw